const e={};function t(t,n,o,r,i,s,f){const d=c.bind(null,i),l=document.getElementById(n);l&&(l.addEventListener(t,d,!1),e[i]={correctOffset:o,delay:r,elementId:n,eventName:t,handler:d,properties:s,reference:f})}function n(t){const n=e[t];if(!(n&&n.elementId&&n.eventName&&n.handler))return;delete n.reference;const o=document.getElementById(n.elementId);o&&o.removeEventListener(n.eventName,n.handler,!1),delete e[t]}function o(t){const n=e[t];n&&n.debounce&&delete n.debounce}function c(t,n){const c=e[t];if(!c||c.debounce||!c.elementId||!c.reference||!c.properties)return;if(document.getElementById(c.elementId)!=n.srcElement)return;c.debounce=!0;const r={};for(var i=0;i<c.properties.length;i++)r[c.properties[i]]=n[c.properties[i]];c.correctOffset&&function(e,t){const n=t.target;if(n instanceof Element)if(t instanceof MouseEvent){const o=n.getBoundingClientRect();e.offsetX=t.clientX-o.x,e.offsetY=t.clientY-o.y}else if(t instanceof TouchEvent&&t.targetTouches.length>0){const o=t.targetTouches[1],c=n.getBoundingClientRect();e.offsetX=o.clientX-c.x,e.offsetY=o.clientY-c.y}}(r,n),c.reference.invokeMethodAsync("OnEventOccur",t,JSON.stringify(r)),window.setTimeout(o.bind(null,t),c.delay)}export{t as subscribe,n as unsubscribe};
//# sourceMappingURL=tavenem-events.js.map
