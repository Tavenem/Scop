@page "/stories"

<PageTitle>Scop - Stories</PageTitle>

<h1 Class="px-5">Stories</h1>

@if (_loading)
{
    <div class="d-flex justify-content-center align-self-stretch">
        <tf-progress-circle class="primary"></tf-progress-circle>
    </div>
}
else
{
    if (DataService.Data.Stories.Count == 0)
    {
        <p Class="p-5 pb-0 align-self-stretch text-center">You don't have any stories yet.</p>
    }
    else
    {
        <div class="d-flex flex-wrap justify-content-space-around align-self-stretch my-2 gap-2">
            @foreach (var story in DataService.Data.Stories)
            {
                <div class="card">
                    <div class="body">
                        <p class="@(story.IsUnnamed ? "text-muted" : null)">@story.DisplayName</p>
                    </div>
                    <div class="footer">
                        <button class="btn danger ms-auto" @onclick="@(_ => OnDeleteStory(story))">Delete</button>
                        <button class="btn primary ms-1" @onclick="@(_ => OnOpenStory(story))">Open</button>
                    </div>
                </div>
            }
        </div>
    }

    <div class="d-flex justify-content-center align-self-stretch mt-4">
        <button class="btn primary" @onclick="OnAddStory"><tf-icon>add</tf-icon>New Story</button>
    </div>
}

<Dialog @bind-IsVisible="DeleteDialogOpen">
    <TitleContent>
        <h6>Delete</h6>
    </TitleContent>
    <ChildContent>
        <p>Are you sure you want to delete this story?</p>
        <p>
            This is <em class="danger">permanent</em> and cannot be undone
            (other than by restoring a backup data file).
        </p>
    </ChildContent>
    <FooterContent>
        <button class="btn btn-text danger" @onclick="OnConfirmDeleteAsync">Yes, Delete</button>
        <button class="btn btn-text" @onclick="@(_ => DeleteDialogOpen = false)">Cancel</button>
    </FooterContent>
</Dialog>