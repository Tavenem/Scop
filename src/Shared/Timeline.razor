<div class="timeline-container">
    <div class="my-3">
        <MudGrid>
            <MudItem xs="12" md="6">
                <MudDatePicker Date="Now"
                               DateChanged="OnSetNowDateAsync"
                               Label="Current Date"
                               AllowKeyboardInput="true"
                               AutoClose="true"
                               PickerVariant="PickerVariant.Dialog" />
            </MudItem>
            <MudItem xs="12" md="6">
                <MudTimePicker Time="NowTime"
                               TimeChanged="OnSetNowTimeAsync"
                               Label="Current Time"
                               AllowKeyboardInput="true"
                               AmPm="true"
                               PickerVariant="PickerVariant.Dialog" />
            </MudItem>
        </MudGrid>
        <MudTooltip Text="Set the story's current date and time to the actual current date and time">
            <MudButton OnClick="OnSetNowAsync"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       Class="mt-2">Now</MudButton>
        </MudTooltip>
    </div>
    <div class="my-3">
        <MudText Typo="Typo.h6">Categories</MudText>
        <MudChipSet @bind-SelectedChips="SelectedCategoryChips"
                    MultiSelection="true"
                    Filter="true"
                    AllClosable="true"
                    OnClose="OnDeleteCategoryAsync">
            @if (Categories is not null)
            {
                for (var i = 0; i < Categories.Count; i++)
                {
                    <MudChip @key="Categories[i].Id" Tag="Categories[i]" Text="@(Categories[i].Name ?? $"Category {i}")" />
                }
            }
        </MudChipSet>
        <MudTextField @bind-Value="NewCategoryName"
                      Immediate="true"
                      OnKeyDown="OnCategoryKeydownAsync"
                      Label="New Category"
                      Class="mb-2" />
        <MudButton OnClick="OnAddCategoryAsync"
                   Disabled="string.IsNullOrWhiteSpace(NewCategoryName)"
                   Variant="Variant.Filled"
                   Color="Color.Success">Add Category</MudButton>
    </div>
    <MudTimeline>
        @foreach (var item in DisplayedEvents)
        {
            <MudTimelineItem Color="Color.Primary" Size="Size.Medium">
                <ItemDot>
                    @if (item == EditedEvent)
                    {
                        <MudIconButton OnClick="@(_ => OnEditEventAsync())" Icon="@Icons.Material.Filled.Done" Size="Size.Small" />
                    }
                    else if (!item.IsReadonly)
                    {
                        <MudIconButton OnClick="@(_ => OnEditEventAsync(item))" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" />
                    }
                </ItemDot>
                <ItemOpposite>
                    @if (item == EditedEvent)
                    {
                        <MudButton OnClick="@(_ => OnDeleteEventAsync(item))"
                                   Variant="Variant.Filled"
                                   StartIcon="@Icons.Material.Filled.Delete"
                                   Color="Color.Error">Delete</MudButton>
                        <MudDatePicker Date="EditedEventStart"
                                       DateChanged="OnEditEventStartDateChanged"
                                       Label="Start"
                                       AllowKeyboardInput="true"
                                       AutoClose="true"
                                       PickerVariant="PickerVariant.Dialog" />
                        <MudSwitch @bind-Checked="ShowEditedEventStartTime" Color="Color.Tertiary">Show Time</MudSwitch>
                        @if (ShowEditedEventStartTime)
                        {
                            <MudTimePicker Time="EditedEventStartTime"
                                           TimeChanged="OnEditEventStartTimeChanged"
                                           Label="Start Time"
                                           AllowKeyboardInput="true"
                                           AmPm="true"
                                           PickerVariant="PickerVariant.Dialog" />
                        }
                        <MudSwitch T="bool"
                                   Checked="ShowEditedEventEnd"
                                   CheckedChanged="OnToggleShowEditedEventEnd"
                                   Color="Color.Primary">Range</MudSwitch>
                        @if (ShowEditedEventEnd)
                        {
                            <MudDatePicker Date="EditedEventEnd"
                                           DateChanged="OnEditEventEndDateChanged"
                                           Label="End"
                                           AllowKeyboardInput="true"
                                           AutoClose="true"
                                           PickerVariant="PickerVariant.Dialog" />
                            <MudSwitch @bind-Checked="ShowEditedEventEndTime" Color="Color.Primary">Show Time</MudSwitch>
                            @if (ShowEditedEventEndTime)
                            {
                                <MudTimePicker Time="EditedEventEndTime"
                                               TimeChanged="OnEditEventEndTimeChanged"
                                               Label="End Time"
                                               AllowKeyboardInput="true"
                                               AmPm="true"
                                               PickerVariant="PickerVariant.Dialog" />
                            }
                        }
                    }
                    else
                    {
                        <MudText Color="Color.Primary" Typo="Typo.h6">@item.DisplayTime</MudText>
                    }
                </ItemOpposite>
                <ItemContent>
                    @if (item == EditedEvent)
                    {
                        <MudTextField T="string"
                                      @bind-Value="EditedEvent.Title"
                                      Label="Title" />
                        <MarkdownEditor @bind-Value="EditedEvent.Markdown"
                                        AfterChange="OnChangeAsync"
                                        EditMode="EditMode.WYSIWYG"
                                        Placeholder="Enter a description for the event here..."
                                        Theme="Theme" />
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(item.Title))
                        {
                            <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">@item.Title</MudText>
                        }
                        if (!string.IsNullOrEmpty(item.Markdown))
                        {
                            <MarkdownViewer Value="@item.Markdown" />
                        }
                    }
                </ItemContent>
            </MudTimelineItem>
        }
        <MudTimelineItem>
            <ItemDot>
                <MudIconButton OnClick="OnAddEvent" Color="Color.Secondary" Icon="@Icons.Material.Filled.Add" />
            </ItemDot>
            <ItemContent>
                <MudText Typo="Typo.h6" Style="@($"color:{MudTheme?.Palette.TextDisabled?.Value ?? "#ffffff33"}")">New Event</MudText>
            </ItemContent>
        </MudTimelineItem>
    </MudTimeline>
</div>