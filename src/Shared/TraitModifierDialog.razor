<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll">
            <MudGrid>
                <MudItem xs="12" sm="7">
                    <MudNumericField @bind-Value="Modifier.Weight"
                                        Label="Weight"
                                        Disabled="Modifier.Force"
                                        Min="0.0" />
                </MudItem>
                <MudItem xs="12" sm="5">
                    <MudTooltip Text="Trait is always selected if the modifier applies" Delay="600">
                        <MudSwitch Label="Force" @bind-Checked="Modifier.Force" Color="Color.Primary" />
                    </MudTooltip>
                </MudItem>
                <MudItem xs="12">
                    <MudTooltip Text="Highest priority wins when multiple modifiers apply" Delay="600">
                        <MudNumericField @bind-Value="Modifier.Priority"
                                            Label="Priority" />
                    </MudTooltip>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudNumericField @bind-Value="Modifier.MinAge"
                                        Label="Min Age"
                                        Min="0" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudNumericField @bind-Value="Modifier.MaxAge"
                                        Label="Max Age"
                                        Min="0" />
                </MudItem>
                <MudItem xs="12">
                    <MudTooltip Delay="600">
                        <TooltipContent>
                            <MudText Typo="Typo.body2">The affected gender</MudText>
                            <MudText Typo="Typo.body2">Determined by the character's pronouns</MudText>
                        </TooltipContent>
                        <ChildContent>
                            <MudSelect T="NameGender"
                                        @bind-Value="Modifier.Gender"
                                        Label="Gender"
                                        AnchorOrigin="Origin.BottomCenter">
                                <MudSelectItem Value="NameGender.None">Any</MudSelectItem>
                                <MudSelectItem Value="NameGender.Female">Female</MudSelectItem>
                                <MudSelectItem Value="NameGender.Male">Male</MudSelectItem>
                            </MudSelect>
                        </ChildContent>
                    </MudTooltip>
                </MudItem>
            </MudGrid>
            <MudCard Class="my-3">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Ethnicities</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>
                        A collection of semicolon-delimited strings indicating the full paths of
                        the ethnicities referenced by this modifier.
                    </MudText>
                    <MudText>
                        The modifier is active if any ethnicity is present.
                    </MudText>
                    <MudList>
                        @if (Modifier.Ethnicities is not null)
                        {
                            for (var i = 0; i < Modifier.Ethnicities.Count; i++)
                            {
                                <MudListItem Class="d-flex justify-space-between">
                                    <MudTextField @bind-Value="Modifier.Ethnicities[i]" OnBlur="OnEditEthnicity" Margin="Margin.Dense" />
                                    <div>
                                        <MudIconButton OnClick="@(_ => OnRemoveEthnicity(i))" Icon="@Icons.Material.Filled.Delete" Color="Color.Error" />
                                    </div>
                                </MudListItem>
                            }
                        }
                        <MudListItem>
                            <MudTextField @bind-Value="NewEthnicity" OnBlur="OnSetNewEthnicity" Margin="Margin.Dense" />
                        </MudListItem>
                    </MudList>
                </MudCardContent>
            </MudCard>
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Traits</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>
                        A collection of semicolon-delimited strings indicating the full paths of
                        the traits referenced by this modifier.
                    </MudText>
                    <MudText>
                        The modifier is active if any trait is present.
                    </MudText>
                    <MudList>
                        @if (Modifier.TargetPaths is not null)
                        {
                            for (var i = 0; i < Modifier.TargetPaths.Count; i++)
                            {
                                <MudListItem Class="d-flex justify-space-between">
                                    <MudTextField @bind-Value="Modifier.TargetPaths[i]" OnBlur="OnEditTargetPath" Margin="Margin.Dense" />
                                    <div>
                                        <MudIconButton OnClick="@(_ => OnRemoveTargetPath(i))" Icon="@Icons.Material.Filled.Delete" Color="Color.Error" />
                                    </div>
                                </MudListItem>
                            }
                        }
                        <MudListItem>
                            <MudTextField @bind-Value="NewEthnicity" OnBlur="OnSetNewTargetPath" Margin="Margin.Dense" />
                        </MudListItem>
                    </MudList>
                </MudCardContent>
            </MudCard>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(_ => MudDialog?.Close(Modifier))" Color="Color.Primary">Done</MudButton>
    </DialogActions>
</MudDialog>
