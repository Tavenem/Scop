<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Trait.Name" Label="Name" />
                </MudItem>
                <MudItem xs="12">
                    <MudNumericField @bind-Value="Trait.Weight"
                                     Label="Weight"
                                     Min="0.0" />
                </MudItem>
                <MudItem xs="12">
                    <MudSelect T="ChoiceType"
                               @bind-Value="Trait.ChoiceType"
                               Label="Choice Type"
                               AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="ChoiceType.Category">Category</MudSelectItem>
                        <MudSelectItem Value="ChoiceType.Manual">Manual</MudSelectItem>
                        <MudSelectItem Value="ChoiceType.Single">Single</MudSelectItem>
                        <MudSelectItem Value="ChoiceType.OneOrMore">One or More</MudSelectItem>
                        <MudSelectItem Value="ChoiceType.Multiple">Multiple</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    @switch (Trait.ChoiceType)
                    {
                        case ChoiceType.Category:
                            <MudText Typo="Typo.body2">
                                All children with a non-zero weight are automatically selected when this trait is selected.
                            </MudText>
                            break;
                        case ChoiceType.Manual:
                            <MudText Typo="Typo.body2">
                                No children are automatically selected, but any number may be selected by hand.
                            </MudText>
                            break;
                        case ChoiceType.Single:
                            <MudText Typo="Typo.body2">
                                One child is selected at random when this trait is selected, if there are any with a non-zero weight.
                            </MudText>
                            <MudText Typo="Typo.body2">
                                Only one child may be selected at a time. Selecting any child will de-select all others.
                            </MudText>
                            break;
                        case ChoiceType.OneOrMore:
                            <MudText Typo="Typo.body2">
                                One child is selected at random when this trait is selected, if there are any with a non-zero weight.
                            </MudText>
                            <MudText Typo="Typo.body2">
                                Any number of children may be selected at a time.
                            </MudText>
                            break;
                        case ChoiceType.Multiple:
                            <MudText Typo="Typo.body2">
                                When this trait is selected, each child is selected or not based on its weight, which is treated as a probability.
                            </MudText>
                            <MudText Typo="Typo.body2">
                                Any number of children may be selected at a time.
                            </MudText>
                            break;
                    }
                </MudItem>
                @if (Trait.ChoiceType is ChoiceType.Single or ChoiceType.OneOrMore)
                {
                    <MudItem xs="12" sm="5">
                        <MudTooltip Text="Selecting no children is allowed" Delay="600">
                            <MudSwitch Label="Can Choose None" @bind-Checked="Trait.CanChooseNone" Color="Color.Primary" />
                        </MudTooltip>
                    </MudItem>
                    <MudItem xs="12" sm="4">
                        <MudTooltip Text="Weight assigned to choosing no child trait" Delay="600">
                            <MudNumericField @bind-Value="Trait.NoneWeight"
                                             Label="None Weight"
                                             Min="0.0" />
                        </MudTooltip>
                    </MudItem>
                }
                <MudItem xs="12">
                    <MudTooltip Text="Whether this option is selected if no selection is made among its children" Delay="600">
                        <MudSwitch Label="Is Chosen on None" @bind-Checked="Trait.IsChosenOnNone" Color="Color.Primary" />
                    </MudTooltip>
                </MudItem>
            </MudGrid>
            <MudCard Class="mt-3">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Modifiers</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>
                        A collection of conditions which may override the effective weight of this trait.
                    </MudText>
                    <MudList>
                        @if (Trait.Modifiers is not null)
                        {
                            for (var i = 0; i < Trait.Modifiers.Count; i++)
                            {
                                var index = i;
                                <MudListItem Class="d-flex justify-space-between">
                                    <MudText>Modifier @(index.ToString())</MudText>
                                    <div>
                                        <MudIconButton OnClick="@(_ => OnEditModifierAsync(Trait.Modifiers[index]))" Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" />
                                        <MudIconButton OnClick="@(_ => OnDeleteModifier(index))" Icon="@Icons.Material.Filled.Delete" Color="Color.Error" />
                                    </div>
                                </MudListItem>
                            }
                        }
                        <MudListItem>
                            <MudIconButton OnClick="@(_ => OnEditModifierAsync(null))" Icon="@Icons.Material.Filled.Add" Color="Color.Success" />
                        </MudListItem>
                    </MudList>
                </MudCardContent>
            </MudCard>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(_ => MudDialog?.Close(Trait))" Color="Color.Primary">Done</MudButton>
    </DialogActions>
</MudDialog>